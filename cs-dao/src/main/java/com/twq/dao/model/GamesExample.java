package com.twq.dao.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GamesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table games
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table games
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table games
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public GamesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table games
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table games
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLike(String value) {
            addCriterion("user_id like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotLike(String value) {
            addCriterion("user_id not like", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeIsNull() {
            addCriterion("check_in_time is null");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeIsNotNull() {
            addCriterion("check_in_time is not null");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeEqualTo(Date value) {
            addCriterion("check_in_time =", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeNotEqualTo(Date value) {
            addCriterion("check_in_time <>", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeGreaterThan(Date value) {
            addCriterion("check_in_time >", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("check_in_time >=", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeLessThan(Date value) {
            addCriterion("check_in_time <", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeLessThanOrEqualTo(Date value) {
            addCriterion("check_in_time <=", value, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeIn(List<Date> values) {
            addCriterion("check_in_time in", values, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeNotIn(List<Date> values) {
            addCriterion("check_in_time not in", values, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeBetween(Date value1, Date value2) {
            addCriterion("check_in_time between", value1, value2, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andCheckInTimeNotBetween(Date value1, Date value2) {
            addCriterion("check_in_time not between", value1, value2, "checkInTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeIsNull() {
            addCriterion("party_time is null");
            return (Criteria) this;
        }

        public Criteria andPartyTimeIsNotNull() {
            addCriterion("party_time is not null");
            return (Criteria) this;
        }

        public Criteria andPartyTimeEqualTo(String value) {
            addCriterion("party_time =", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeNotEqualTo(String value) {
            addCriterion("party_time <>", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeGreaterThan(String value) {
            addCriterion("party_time >", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeGreaterThanOrEqualTo(String value) {
            addCriterion("party_time >=", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeLessThan(String value) {
            addCriterion("party_time <", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeLessThanOrEqualTo(String value) {
            addCriterion("party_time <=", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeLike(String value) {
            addCriterion("party_time like", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeNotLike(String value) {
            addCriterion("party_time not like", value, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeIn(List<String> values) {
            addCriterion("party_time in", values, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeNotIn(List<String> values) {
            addCriterion("party_time not in", values, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeBetween(String value1, String value2) {
            addCriterion("party_time between", value1, value2, "partyTime");
            return (Criteria) this;
        }

        public Criteria andPartyTimeNotBetween(String value1, String value2) {
            addCriterion("party_time not between", value1, value2, "partyTime");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyIsNull() {
            addCriterion("check_money is null");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyIsNotNull() {
            addCriterion("check_money is not null");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyEqualTo(BigDecimal value) {
            addCriterion("check_money =", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyNotEqualTo(BigDecimal value) {
            addCriterion("check_money <>", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyGreaterThan(BigDecimal value) {
            addCriterion("check_money >", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("check_money >=", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyLessThan(BigDecimal value) {
            addCriterion("check_money <", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("check_money <=", value, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyIn(List<BigDecimal> values) {
            addCriterion("check_money in", values, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyNotIn(List<BigDecimal> values) {
            addCriterion("check_money not in", values, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("check_money between", value1, value2, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andCheckMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("check_money not between", value1, value2, "checkMoney");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNull() {
            addCriterion("is_recheck is null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIsNotNull() {
            addCriterion("is_recheck is not null");
            return (Criteria) this;
        }

        public Criteria andIsRecheckEqualTo(Byte value) {
            addCriterion("is_recheck =", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotEqualTo(Byte value) {
            addCriterion("is_recheck <>", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThan(Byte value) {
            addCriterion("is_recheck >", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckGreaterThanOrEqualTo(Byte value) {
            addCriterion("is_recheck >=", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThan(Byte value) {
            addCriterion("is_recheck <", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckLessThanOrEqualTo(Byte value) {
            addCriterion("is_recheck <=", value, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckIn(List<Byte> values) {
            addCriterion("is_recheck in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotIn(List<Byte> values) {
            addCriterion("is_recheck not in", values, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckBetween(Byte value1, Byte value2) {
            addCriterion("is_recheck between", value1, value2, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andIsRecheckNotBetween(Byte value1, Byte value2) {
            addCriterion("is_recheck not between", value1, value2, "isRecheck");
            return (Criteria) this;
        }

        public Criteria andReChecktimeIsNull() {
            addCriterion("re_checkTime is null");
            return (Criteria) this;
        }

        public Criteria andReChecktimeIsNotNull() {
            addCriterion("re_checkTime is not null");
            return (Criteria) this;
        }

        public Criteria andReChecktimeEqualTo(Date value) {
            addCriterion("re_checkTime =", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeNotEqualTo(Date value) {
            addCriterion("re_checkTime <>", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeGreaterThan(Date value) {
            addCriterion("re_checkTime >", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeGreaterThanOrEqualTo(Date value) {
            addCriterion("re_checkTime >=", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeLessThan(Date value) {
            addCriterion("re_checkTime <", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeLessThanOrEqualTo(Date value) {
            addCriterion("re_checkTime <=", value, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeIn(List<Date> values) {
            addCriterion("re_checkTime in", values, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeNotIn(List<Date> values) {
            addCriterion("re_checkTime not in", values, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeBetween(Date value1, Date value2) {
            addCriterion("re_checkTime between", value1, value2, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReChecktimeNotBetween(Date value1, Date value2) {
            addCriterion("re_checkTime not between", value1, value2, "reChecktime");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyIsNull() {
            addCriterion("re_checkMoney is null");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyIsNotNull() {
            addCriterion("re_checkMoney is not null");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyEqualTo(BigDecimal value) {
            addCriterion("re_checkMoney =", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyNotEqualTo(BigDecimal value) {
            addCriterion("re_checkMoney <>", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyGreaterThan(BigDecimal value) {
            addCriterion("re_checkMoney >", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("re_checkMoney >=", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyLessThan(BigDecimal value) {
            addCriterion("re_checkMoney <", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("re_checkMoney <=", value, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyIn(List<BigDecimal> values) {
            addCriterion("re_checkMoney in", values, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyNotIn(List<BigDecimal> values) {
            addCriterion("re_checkMoney not in", values, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("re_checkMoney between", value1, value2, "reCheckmoney");
            return (Criteria) this;
        }

        public Criteria andReCheckmoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("re_checkMoney not between", value1, value2, "reCheckmoney");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table games
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table games
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}